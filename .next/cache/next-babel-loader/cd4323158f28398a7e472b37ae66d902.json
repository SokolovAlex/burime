{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { socket } from \"../../services/socket\";\nimport { ChatContainer, NameBackground, NameInputWrapper, WhiteTextField, MessagesContainer, NewMessageContainer } from \"./styled\";\nimport { Button } from \"@material-ui/core\";\nimport storage from '../../services/storage';\nimport { isClient } from \"../../config\";\nexport var Chat = function Chat() {\n  var _useState = useState(storage.getItem('name')),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(true),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(),\n      inputName = _useState3[0],\n      setInputName = _useState3[1];\n\n  var send = function send() {\n    socket.emit('sendMessage', '!!!');\n  };\n\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      setName(inputName);\n      storage.setItem('name', inputName);\n    }\n  };\n\n  var clearName = function clearName() {\n    setName(null);\n    storage.removeItem('name');\n  };\n\n  useEffect(function () {\n    socket.on('getMessage', function (message) {\n      console.log(message);\n    });\n  }, []);\n  return React.createElement(\"div\", null, isClient && React.createElement(ChatContainer, null, React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    onClick: function onClick() {\n      return setOpen(!open);\n    }\n  }, \"\\u0427\\u0430\\u0442\"), open && React.createElement(React.Fragment, null, name ? React.createElement(React.Fragment, null, React.createElement(MessagesContainer, null), React.createElement(NewMessageContainer, null, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return clearName();\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u0438\\u043C\\u044F\"))) : React.createElement(NameBackground, null, React.createElement(NameInputWrapper, null, React.createElement(WhiteTextField, {\n    label: \"\\u0418\\u043C\\u044F \\u0434\\u043B\\u044F \\u0447\\u0430\\u0442\\u0430\",\n    variant: \"outlined\",\n    type: \"text\",\n    margin: \"normal\",\n    onKeyPress: function onKeyPress(e) {\n      return handleKeyPress(e);\n    },\n    onChange: function onChange(e) {\n      return setInputName(e.target.value);\n    }\n  }))))));\n};","map":{"version":3,"sources":["C:/Users/alexs/Desktop/Алексей/code/burime/components/Chat/Chat.tsx"],"names":["React","useEffect","useState","socket","ChatContainer","NameBackground","NameInputWrapper","WhiteTextField","MessagesContainer","NewMessageContainer","Button","storage","isClient","Chat","getItem","name","setName","open","setOpen","inputName","setInputName","send","emit","handleKeyPress","e","key","setItem","clearName","removeItem","on","message","console","log","textAlign","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,gBAAxC,EAA0DC,cAA1D,EAA0EC,iBAA1E,EAA6FC,mBAA7F,QAAwH,UAAxH;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBACEX,QAAQ,CAACS,OAAO,CAACG,OAAR,CAAgB,MAAhB,CAAD,CADV;AAAA,MACfC,IADe;AAAA,MACTC,OADS;;AAAA,mBAEEd,QAAQ,CAAC,IAAD,CAFV;AAAA,MAEfe,IAFe;AAAA,MAETC,OAFS;;AAAA,mBAGYhB,QAAQ,EAHpB;AAAA,MAGfiB,SAHe;AAAA,MAGJC,YAHI;;AAKtB,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBlB,IAAAA,MAAM,CAACmB,IAAP,CAAY,aAAZ,EAA2B,KAA3B;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAY;AACjC,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAsB;AACpBT,MAAAA,OAAO,CAACG,SAAD,CAAP;AACAR,MAAAA,OAAO,CAACe,OAAR,CAAgB,MAAhB,EAAwBP,SAAxB;AACD;AACF,GALD;;AAOA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBX,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAL,IAAAA,OAAO,CAACiB,UAAR,CAAmB,MAAnB;AACD,GAHD;;AAKA3B,EAAAA,SAAS,CAAE,YAAM;AACbE,IAAAA,MAAM,CAAC0B,EAAP,CAAU,YAAV,EAAwB,UAACC,OAAD,EAAa;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,iCACIlB,QAAQ,IAAI,oBAAC,aAAD,QACZ;AAAK,IAAA,KAAK,EAAE;AAAEqB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAMf,OAAO,CAAC,CAACD,IAAF,CAAb;AAAA;AAA9C,0BADY,EAKVA,IAAI,IACJ,0CACIF,IAAI,GACD,0CACG,oBAAC,iBAAD,OADH,EAEG,oBAAC,mBAAD,QACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC;AAAlC,8DADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE;AAAA,aAAMY,SAAS,EAAf;AAAA;AAArC,yDAFF,CAFH,CADC,GAUA,oBAAC,cAAD,QACE,oBAAC,gBAAD,QACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,gEADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,UAAU,EAAE,oBAACH,CAAD;AAAA,aAAOD,cAAc,CAACC,CAAD,CAArB;AAAA,KALd;AAME,IAAA,QAAQ,EAAE,kBAACA,CAAD;AAAA,aAAOJ,YAAY,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAAnB;AAAA;AANZ,IADF,CADF,CAXR,CANU,CADhB,CADF;AAuCH,CAlEM","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { socket } from \"../../services/socket\";\r\nimport { ChatContainer, NameBackground, NameInputWrapper, WhiteTextField, MessagesContainer, NewMessageContainer } from \"./styled\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport storage from '../../services/storage';\r\nimport { isClient } from \"../../config\";\r\n\r\nexport const Chat = () => {\r\n    const [name, setName] = useState(storage.getItem('name'));\r\n    const [open, setOpen] = useState(true);\r\n    const [inputName, setInputName] = useState();\r\n\r\n    const send = () => {\r\n      socket.emit('sendMessage', '!!!');\r\n    }\r\n\r\n    const handleKeyPress = (e: any) => {\r\n      if (e.key === 'Enter'){\r\n        setName(inputName);\r\n        storage.setItem('name', inputName);\r\n      }\r\n    }\r\n\r\n    const clearName = () => {\r\n      setName(null)\r\n      storage.removeItem('name');\r\n    }\r\n\r\n    useEffect( () => {\r\n        socket.on('getMessage', (message) => {\r\n            console.log(message);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n      <div>\r\n        { isClient && <ChatContainer>\r\n          <div style={{ textAlign: \"center\" }} onClick={() => setOpen(!open)}>\r\n            Чат\r\n          </div>\r\n\r\n          { open &&\r\n            <>\r\n              { name ?\r\n                  (<>\r\n                      <MessagesContainer></MessagesContainer>\r\n                      <NewMessageContainer>\r\n                        <Button variant=\"contained\" color=\"primary\">Отправить</Button>\r\n                        <Button variant=\"contained\" onClick={() => clearName()}>Новое имя</Button>\r\n                      </NewMessageContainer>\r\n                    </>)\r\n                  :\r\n                  (\r\n                    <NameBackground>\r\n                      <NameInputWrapper>\r\n                        <WhiteTextField\r\n                          label=\"Имя для чата\"\r\n                          variant=\"outlined\"\r\n                          type=\"text\"\r\n                          margin=\"normal\"\r\n                          onKeyPress={(e) => handleKeyPress(e)}\r\n                          onChange={(e) => setInputName(e.target.value)}\r\n                        />\r\n                      </NameInputWrapper>\r\n                    </NameBackground>\r\n                  )\r\n              }\r\n            </>\r\n          }\r\n        </ChatContainer>\r\n      }\r\n      </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}