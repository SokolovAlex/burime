{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexs\\\\Desktop\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\code\\\\burime\\\\client\\\\components\\\\AuthModal\\\\SignIn.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { InputWrapper, GoogleButton, ActionsWrapper, Centered, LightText } from './styled';\nimport { SubmitButton } from '../atoms/Button/Button';\nimport { TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { FaGoogle } from 'react-icons/fa';\nimport useForm from 'react-hook-form';\nimport { baseServerUrl } from '../../constants/urls';\nexport var SignIn = function SignIn(_ref) {\n  var onSubmit = _ref.onSubmit,\n      onToggle = _ref.onToggle,\n      email = _ref.email,\n      password = _ref.password;\n\n  var _useForm = useForm({\n    defaultValues: {\n      email: email,\n      password: password\n    }\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    key: \"signIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Centered, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(GoogleButton, {\n    href: \"\".concat(baseServerUrl, \"/auth/google\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FaGoogle, {\n    size: \"24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"))), React.createElement(Centered, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(LightText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u0438\\u043B\\u0438\")), React.createElement(InputWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"email\",\n    name: \"email\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(InputWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    label: \"\\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    inputRef: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(ActionsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(SubmitButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), React.createElement(Link, {\n    component: \"button\",\n    onClick: onToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")));\n};","map":{"version":3,"sources":["C:/Users/alexs/Desktop/Алексей/code/burime/client/components/AuthModal/SignIn.tsx"],"names":["React","InputWrapper","GoogleButton","ActionsWrapper","Centered","LightText","SubmitButton","TextField","Link","FaGoogle","useForm","baseServerUrl","SignIn","onSubmit","onToggle","email","password","defaultValues","register","handleSubmit","required"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,cAArC,EAAqDC,QAArD,EAA+DC,SAA/D,QAAgF,UAAhF;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AASA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAKH;AAAA,MAJfC,QAIe,QAJfA,QAIe;AAAA,MAHfC,QAGe,QAHfA,QAGe;AAAA,MAFfC,KAEe,QAFfA,KAEe;AAAA,MADfC,QACe,QADfA,QACe;;AAAA,iBACoBN,OAAO,CAAC;AACvCO,IAAAA,aAAa,EAAE;AACXF,MAAAA,KAAK,EAALA,KADW;AAEXC,MAAAA,QAAQ,EAARA;AAFW;AADwB,GAAD,CAD3B;AAAA,MACPE,QADO,YACPA,QADO;AAAA,MACGC,YADH,YACGA,YADH;;AAQf,SACI;AAAM,IAAA,QAAQ,EAAEA,YAAY,CAACN,QAAD,CAA5B;AAAwC,IAAA,GAAG,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,YAAKF,aAAL,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,CADJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAPJ,EAUI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEO,QAAQ,CAAC;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,EAkBI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,KAAK,EAAC,sCAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,YAAY,EAAC,kBALjB;AAMI,IAAA,QAAQ,EAAEF,QAAQ,CAAC;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAlBJ,EA4BI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAEN,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHAFJ,CA5BJ,CADJ;AAqCH,CAlDM","sourcesContent":["import React from 'react'\nimport { InputWrapper, GoogleButton, ActionsWrapper, Centered, LightText } from './styled'\nimport { SubmitButton } from '../atoms/Button/Button'\nimport { TextField } from '@material-ui/core'\nimport Link from '@material-ui/core/Link'\nimport { FaGoogle } from 'react-icons/fa'\nimport useForm from 'react-hook-form'\nimport { baseServerUrl } from '../../constants/urls'\n\ninterface SignInProps {\n    email?: string\n    password?: string\n    onSubmit: (data: any) => void\n    onToggle: () => void\n}\n\nexport const SignIn = ({\n    onSubmit,\n    onToggle,\n    email,\n    password,\n}: SignInProps) => {\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            email,\n            password,\n        },\n    });\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} key=\"signIn\">\n            <Centered>\n                <GoogleButton href={`${baseServerUrl}/auth/google`}>\n                    <FaGoogle size=\"24\" />\n                    <span>Войти</span>\n                </GoogleButton>\n            </Centered>\n            <Centered>\n                <LightText>или</LightText>\n            </Centered>\n            <InputWrapper>\n                <TextField\n                    fullWidth\n                    label=\"email\"\n                    name=\"email\"\n                    inputRef={register({ required: true })}\n                ></TextField>\n            </InputWrapper>\n            <InputWrapper>\n                <TextField\n                    fullWidth\n                    label=\"пароль\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    inputRef={register({ required: true })}\n                ></TextField>\n            </InputWrapper>\n            <ActionsWrapper>\n                <SubmitButton>Войти</SubmitButton>\n                <Link component=\"button\" onClick={onToggle}>\n                    Зарегистрироваться\n                </Link>\n            </ActionsWrapper>\n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}