{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexs\\\\Desktop\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\code\\\\burime\\\\client\\\\components\\\\organizms\\\\AllBurimeList\\\\AllBurimeList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useUser } from '../../../services/contexts/auth';\nimport { Title } from '../../atoms/Title/Title';\nimport { useActiveBurime, goToBurime, useBurimesPage } from '../../../services/api/burime';\nimport dayjs from 'dayjs';\nimport { HeartEmpty, OpenStyled, HeartFilled, ActionsBlock, Action } from '../../atoms/styled';\nimport { like, dislike } from '../../../services/api/likes';\nimport DataTable from 'react-data-table-component';\nimport { Spinner } from '../../atoms/Spinner/Spinner';\nimport { breakpoints } from '../../../constants';\nvar RowsPerPage = 20;\n\nvar prepareRows = function prepareRows(burimes, userEmail) {\n  return burimes.map(function (_ref) {\n    var id = _ref.id,\n        likes = _ref.likes,\n        theme = _ref.theme,\n        user1 = _ref.user1,\n        user2 = _ref.user2,\n        createdAt = _ref.createdAt;\n    return {\n      id: id.toString(),\n      burimeId: id,\n      theme: theme,\n      user1: user1.name,\n      opponent: user2.name,\n      iLike: likes.some(function (like) {\n        return like.user.email === userEmail;\n      }),\n      likes: likes.length,\n      createdAt: dayjs(createdAt).format('DD/MM/YYYY')\n    };\n  });\n};\n\nvar mobileBreakpoint = _parseInt(breakpoints.breakpointSizes.mobile, 10);\n\nvar prepareColumns = function prepareColumns(_ref2) {\n  var onOpen = _ref2.onOpen,\n      onLike = _ref2.onLike,\n      onDislike = _ref2.onDislike;\n  return [{\n    name: 'Заголовок',\n    selector: 'theme',\n    sortable: true\n  }, {\n    name: 'Вызвал',\n    selector: 'user1',\n    sortable: true,\n    right: true,\n    hide: mobileBreakpoint\n  }, {\n    name: 'Принял',\n    selector: 'opponent',\n    sortable: true,\n    right: true,\n    hide: mobileBreakpoint\n  }, {\n    name: 'Дата',\n    selector: 'createdAt',\n    sortable: true,\n    right: true\n  }, {\n    name: 'Нравится',\n    cell: function cell(row) {\n      return React.createElement(ActionsBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, row.iLike ? React.createElement(HeartFilled, {\n        onClick: function onClick() {\n          return onDislike(row.burimeId);\n        },\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }) : React.createElement(HeartEmpty, {\n        onClick: function onClick() {\n          return onLike(row.burimeId);\n        },\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Action, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, row.likes));\n    },\n    button: true,\n    right: true\n  }, {\n    name: 'Прочесть',\n    cell: function cell(row) {\n      return React.createElement(OpenStyled, {\n        width: 16,\n        onClick: function onClick() {\n          return onOpen(row.burimeId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    },\n    button: true,\n    right: true\n  }];\n};\n\nvar setLike = function setLike(isLike, burimes, burimeId, userEmail) {\n  var burime = burimes.find(function (burime) {\n    return burime.id === burimeId;\n  });\n\n  if (isLike) {\n    burime.likes.push({\n      user: {\n        email: userEmail\n      }\n    });\n  } else {\n    burime.likes = burime.likes.filter(function (burime) {\n      return burime.user.email !== userEmail;\n    });\n  }\n\n  return _toConsumableArray(burimes);\n};\n\nexport var AllBurimeList = function AllBurimeList() {\n  var user = useUser();\n\n  if (!user) {\n    return null;\n  }\n\n  useActiveBurime();\n\n  var _useBurimesPage = useBurimesPage({\n    page: 1,\n    size: RowsPerPage\n  }),\n      loading = _useBurimesPage.loading,\n      burimes = _useBurimesPage.burimes,\n      setBurimes = _useBurimesPage.setBurimes,\n      total = _useBurimesPage.total,\n      setPage = _useBurimesPage.setPage;\n\n  var _useState = useState();\n\n  _objectDestructuringEmpty(_useState);\n\n  var onOpen = useCallback(function (burimeId) {\n    return goToBurime(burimeId);\n  }, []);\n  var onLike = useCallback(function (burimeId) {\n    return like(burimeId).then(function () {\n      return setBurimes(setLike(true, burimes, burimeId, user.email));\n    });\n  }, [burimes]);\n  var onDislike = useCallback(function (burimeId) {\n    return dislike(burimeId).then(function () {\n      return setBurimes(setLike(false, burimes, burimeId, user.email));\n    });\n  }, [burimes]);\n  var rows = useMemo(function () {\n    return prepareRows(burimes, user.email);\n  }, [burimes]);\n  var columns = useMemo(function () {\n    return prepareColumns({\n      onOpen: onOpen,\n      onLike: onLike,\n      onDislike: onDislike\n    });\n  }, [onOpen, onLike, onDislike]);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"\\u0412\\u0441\\u0435 \\u0431\\u0443\\u0440\\u0438\\u043C\\u0435\"), React.createElement(DataTable, {\n    noHeader: true,\n    columns: columns,\n    data: rows,\n    progressPending: loading,\n    progressComponent: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }),\n    pagination: true,\n    paginationServer: true,\n    paginationTotalRows: total,\n    paginationRowsPerPageOptions: [RowsPerPage],\n    paginationPerPage: RowsPerPage,\n    onChangePage: function onChangePage(page) {\n      return setPage(page);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["C:/Users/alexs/Desktop/Алексей/code/burime/client/components/organizms/AllBurimeList/AllBurimeList.tsx"],"names":["React","useState","useCallback","useMemo","useUser","Title","useActiveBurime","goToBurime","useBurimesPage","dayjs","HeartEmpty","OpenStyled","HeartFilled","ActionsBlock","Action","like","dislike","DataTable","Spinner","breakpoints","RowsPerPage","prepareRows","burimes","userEmail","map","id","likes","theme","user1","user2","createdAt","toString","burimeId","name","opponent","iLike","some","user","email","length","format","mobileBreakpoint","breakpointSizes","mobile","prepareColumns","onOpen","onLike","onDislike","selector","sortable","right","hide","cell","row","button","setLike","isLike","burime","find","push","filter","AllBurimeList","page","size","loading","setBurimes","total","setPage","then","rows","columns"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { useUser } from '../../../services/contexts/auth';\nimport { Title } from '../../atoms/Title/Title';\nimport {\n    useActiveBurime,\n    goToBurime,\n    useBurimesPage,\n} from '../../../services/api/burime';\nimport { BurimeModel } from '../../../models/burime';\nimport dayjs from 'dayjs';\nimport { HeartEmpty, OpenStyled, HeartFilled, ActionsBlock, Action } from '../../atoms/styled';\nimport { like, dislike } from '../../../services/api/likes';\nimport DataTable from 'react-data-table-component';\nimport { Spinner } from '../../atoms/Spinner/Spinner';\nimport { breakpoints } from '../../../constants';\n\nconst RowsPerPage = 20;\n\nconst prepareRows = (burimes: BurimeModel[], userEmail) =>\n    burimes.map(({ id, likes, theme, user1, user2, createdAt }) => ({\n        id: id.toString(),\n        burimeId: id,\n        theme,\n        user1: user1.name,\n        opponent: user2.name,\n        iLike: likes.some(like => like.user.email === userEmail),\n        likes: likes.length,\n        createdAt: dayjs(createdAt).format('DD/MM/YYYY'),\n    }));\n\nconst mobileBreakpoint = parseInt(breakpoints.breakpointSizes.mobile, 10);\n\nconst prepareColumns = ({\n    onOpen,\n    onLike,\n    onDislike,\n}) => [\n    {\n        name: 'Заголовок',\n        selector: 'theme',\n        sortable: true,\n    },\n    {\n        name: 'Вызвал',\n        selector: 'user1',\n        sortable: true,\n        right: true,\n        hide: mobileBreakpoint,\n    },\n    {\n        name: 'Принял',\n        selector: 'opponent',\n        sortable: true,\n        right: true,\n        hide: mobileBreakpoint,\n    },\n    {\n        name: 'Дата',\n        selector: 'createdAt',\n        sortable: true,\n        right: true,\n    },\n    {\n        name: 'Нравится',\n        cell: row => (\n            <ActionsBlock>\n                {\n                    row.iLike\n                        ? <HeartFilled\n                            onClick={() => onDislike(row.burimeId)}\n                            width={16}/>\n                        : <HeartEmpty\n                            onClick={() => onLike(row.burimeId)}\n                            width={16}/>\n                }\n                <Action>{row.likes}</Action>\n            </ActionsBlock>\n        ),\n        button: true,\n        right: true,\n    },\n    {\n        name: 'Прочесть',\n        cell: row => <OpenStyled width={16} onClick={() => onOpen(row.burimeId)}/>,\n        button: true,\n        right: true,\n    },\n];\n\nconst setLike = (isLike, burimes, burimeId, userEmail) => {\n    const burime = burimes.find(burime => burime.id === burimeId);\n    if (isLike) {\n        burime.likes.push({\n            user: {\n                email: userEmail,\n            }\n        });\n    } else {\n        burime.likes = burime.likes.filter(burime => burime.user.email !== userEmail);\n    }\n    return [...burimes];\n}\n\nexport const AllBurimeList = () => {\n    const user = useUser();\n    if (!user) {\n        return null;\n    }\n    useActiveBurime();\n    const { loading, burimes, setBurimes, total, setPage } = useBurimesPage({\n        page: 1,\n        size: RowsPerPage,\n    });\n    const [] = useState();\n    const onOpen = useCallback(burimeId => goToBurime(burimeId), []);\n    const onLike = useCallback(burimeId =>\n        like(burimeId)\n            .then(() => setBurimes(setLike(true, burimes, burimeId, user.email))),\n        [burimes]);\n    const onDislike = useCallback(burimeId => \n        dislike(burimeId)\n            .then(() => setBurimes(setLike(false, burimes, burimeId, user.email))),\n        [burimes]);\n\n    const rows = useMemo(() => prepareRows(burimes, user.email), [burimes]);\n    const columns = useMemo(() => prepareColumns({\n        onOpen,\n        onLike,\n        onDislike,\n    }), [onOpen, onLike, onDislike]);\n    return (\n        <>\n            <Title>Все буриме</Title>\n            <DataTable\n                noHeader\n                columns={columns}\n                data={rows}\n                progressPending={loading}\n                progressComponent={<Spinner/>}\n                pagination\n                paginationServer\n                paginationTotalRows={total}\n                paginationRowsPerPageOptions={[RowsPerPage]}\n                paginationPerPage={RowsPerPage}\n                onChangePage={(page) => setPage(page)}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}