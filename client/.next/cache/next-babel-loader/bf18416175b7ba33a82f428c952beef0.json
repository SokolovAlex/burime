{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _rootPreset;\n\nimport styled, { css } from 'styled-components';\nimport { colors } from '../../../constants';\nexport var ButtonType;\n\n(function (ButtonType) {\n  ButtonType[ButtonType[\"primary\"] = 0] = \"primary\";\n  ButtonType[ButtonType[\"white\"] = 1] = \"white\";\n  ButtonType[ButtonType[\"danger\"] = 2] = \"danger\";\n})(ButtonType || (ButtonType = {}));\n\nvar rootPreset = (_rootPreset = {}, _defineProperty(_rootPreset, ButtonType.primary, css([\"background:transparent;color:\", \";border:2px solid \", \";&:hover{background-color:\", \";color:white;}\"], colors.primary, colors.primary, colors.primary)), _defineProperty(_rootPreset, ButtonType.white, css([\"background:white;color:\", \";border:2px solid \", \";&:hover{border-color:#0a4b61;color:#0a4b61;}\"], colors.primary, colors.primary)), _defineProperty(_rootPreset, ButtonType.danger, css([\"background:\", \";color:white;border:none;&:hover{background-color:red;color:white;}\"], colors.danger)), _rootPreset);\nvar sizePreset = {\n  sm: css([\"font-size:16px;padding:8px 16px;\"]),\n  md: css([\"font-size:20px;padding:12px 24px;\"])\n};\nexport var ButtonHost = styled.button.withConfig({\n  displayName: \"styled__ButtonHost\",\n  componentId: \"sc-1oqwi77-0\"\n})([\"cursor:pointer;border-radius:3px;transition:0.5s all ease-out;font-family:'Nunito',sans-serif;\", \" \", \" \", \"\"], function (_ref) {\n  var buttonType = _ref.buttonType;\n  return rootPreset[buttonType];\n}, function (_ref2) {\n  var size = _ref2.size;\n  return sizePreset[size || 'md'];\n}, function (props) {\n  return props.width && css([\"width:\", \"px;\"], props.width);\n});","map":{"version":3,"sources":["C:/Users/alexs/Desktop/Алексей/code/burime/client/components/atoms/Button/styled.ts"],"names":["styled","css","colors","ButtonType","rootPreset","primary","white","danger","sizePreset","sm","md","ButtonHost","button","buttonType","size","props","width"],"mappings":";;;;AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;AAAAA,EAAAA,U,CAAAA,U;GAAAA,U,KAAAA,U;;AAMZ,IAAMC,UAAU,mDACXD,UAAU,CAACE,OADA,EACUJ,GADV,0GAGCC,MAAM,CAACG,OAHR,EAIYH,MAAM,CAACG,OAJnB,EAMgBH,MAAM,CAACG,OANvB,iCAUXF,UAAU,CAACG,KAVA,EAUQL,GAVR,qGAYCC,MAAM,CAACG,OAZR,EAaYH,MAAM,CAACG,OAbnB,iCAmBXF,UAAU,CAACI,MAnBA,EAmBUN,GAnBV,yFAoBMC,MAAM,CAACK,MApBb,gBAAhB;AA8BA,IAAMC,UAAU,GAAG;AACfC,EAAAA,EAAE,EAAER,GAAF,sCADa;AAKfS,EAAAA,EAAE,EAAET,GAAF;AALa,CAAnB;AAWA,OAAO,IAAMU,UAAU,GAAGX,MAAM,CAACY,MAAV;AAAA;AAAA;AAAA,qHAUjB;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,SAAkBT,UAAU,CAACS,UAAD,CAA5B;AAAA,CAViB,EAYjB;AAAA,MAAEC,IAAF,SAAEA,IAAF;AAAA,SAAYN,UAAU,CAACM,IAAI,IAAI,IAAT,CAAtB;AAAA,CAZiB,EAcjB,UAAAC,KAAK;AAAA,SACHA,KAAK,CAACC,KAAN,IACAf,GADA,oBAEac,KAAK,CAACC,KAFnB,CADG;AAAA,CAdY,CAAhB","sourcesContent":["import styled, { css } from 'styled-components';\nimport { colors } from '../../../constants';\n\nexport enum ButtonType {\n    primary,\n    white,\n    danger,\n}\n\nconst rootPreset = {\n    [ButtonType.primary]: css`\n        background: transparent;\n        color: ${colors.primary};\n        border: 2px solid ${colors.primary};\n        &:hover {\n            background-color: ${colors.primary};\n            color: white;\n        }\n    `,\n    [ButtonType.white]: css`\n        background: white;\n        color: ${colors.primary};\n        border: 2px solid ${colors.primary};\n        &:hover {\n            border-color: #0a4b61;\n            color: #0a4b61;\n        }\n    `,\n    [ButtonType.danger]:  css`\n        background: ${colors.danger};\n        color: white;\n        border: none;\n        &:hover {\n            background-color: red;\n            color: white;\n        }\n    `,\n}\n\nconst sizePreset = {\n    sm: css`\n        font-size: 16px;\n        padding: 8px 16px;\n    `,\n    md: css`\n        font-size: 20px;\n        padding: 12px 24px;\n    `,\n}\n\nexport const ButtonHost = styled.button<{\n    width?: number;\n    size?: string;\n    buttonType: ButtonType;\n}>`\n    cursor: pointer;\n    border-radius: 3px;\n    transition: 0.5s all ease-out;\n    font-family: 'Nunito', sans-serif;\n\n    ${({buttonType}) => rootPreset[buttonType]}\n\n    ${({size}) => sizePreset[size || 'md']}\n\n    ${props =>\n        props.width &&\n        css`\n            width: ${props.width}px;\n        `\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}