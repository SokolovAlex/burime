{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { BurimeEditHost, FlexRow, SelectWrapper, BurimeEditBody, BurimeEditFooter, IconButton } from './styled';\nimport { BurimeStepsAmountOptions, StepDurationOptions } from '../../../models/burime';\nimport { Title } from '../../atoms/Title/Title';\nimport { useUser } from '../../../services/contexts/auth';\nimport Select from 'react-select';\nimport { Input, InputRow, InputLabel } from '../../atoms/Input/Input';\nimport { Size } from '../../../constants/enums';\nimport { Button, ButtonType } from '../../atoms/Button/Button';\nimport { Random } from '@styled-icons/fa-solid/Random';\nimport { getRandomTitle } from '../../../services/api/burime';\nexport var BurimeEdit = function BurimeEdit(_ref) {\n  var burime = _ref.burime,\n      onSave = _ref.onSave,\n      onCancel = _ref.onCancel;\n  var user = useUser();\n  var isNew = useMemo(function () {\n    return !burime.id;\n  }, []);\n\n  var _useState = useState(BurimeStepsAmountOptions[1]),\n      selectedSteps = _useState[0],\n      setSelectedSteps = _useState[1];\n\n  var _useState2 = useState(StepDurationOptions[0]),\n      selectedDuration = _useState2[0],\n      setSelectedDuration = _useState2[1];\n\n  var _useState3 = useState(burime.theme),\n      theme = _useState3[0],\n      setTheme = _useState3[1];\n\n  var onStepChange = useCallback(function (option) {\n    return setSelectedSteps(option);\n  }, []);\n  var onGetRandomTitle = useCallback(function () {\n    return getRandomTitle().then(function (_ref2) {\n      var title = _ref2.title;\n      return setTheme(title);\n    });\n  }, []);\n  var onDurationChange = useCallback(function (option) {\n    return setSelectedDuration(option);\n  }, []);\n  var onThemeChange = useCallback(function (e) {\n    return setTheme(e.currentTarget.value);\n  }, []);\n  var onBurimeSave = useCallback(function () {\n    if (onSave && burime) {\n      burime.stepDuration = selectedDuration.value;\n      burime.stepsAmount = selectedSteps.value;\n      burime.theme = theme;\n      burime.user1 = user;\n      onSave(burime);\n    }\n  }, [burime, theme, selectedSteps, selectedDuration]);\n  return React.createElement(BurimeEditHost, null, React.createElement(BurimeEditBody, null, React.createElement(Title, {\n    size: Size.sm\n  }, isNew ? 'Создать буриме' : 'Редактировать буриме'), React.createElement(InputRow, null, React.createElement(InputLabel, null, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"), React.createElement(Input, {\n    onChange: onThemeChange,\n    value: theme,\n    placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"\n  }), React.createElement(IconButton, {\n    onClick: onGetRandomTitle\n  }, React.createElement(Random, {\n    width: 24\n  }))), React.createElement(FlexRow, {\n    withMargin: true\n  }, React.createElement(SelectWrapper, {\n    margin: true\n  }, React.createElement(InputLabel, null, \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\"), React.createElement(Select, {\n    isSearchable: false,\n    value: selectedSteps,\n    onChange: onStepChange,\n    options: BurimeStepsAmountOptions\n  })), React.createElement(SelectWrapper, null, React.createElement(InputLabel, null, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430 \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"), React.createElement(Select, {\n    isSearchable: false,\n    isDisabled: true,\n    value: selectedDuration,\n    onChange: onDurationChange,\n    options: StepDurationOptions\n  }))), React.createElement(\"div\", null, React.createElement(\"span\", null, \"\\u0410\\u0432\\u0442\\u043E\\u0440: \"), React.createElement(\"i\", null, user && user.name))), React.createElement(BurimeEditFooter, null, React.createElement(Button, {\n    type: ButtonType.white,\n    onClick: function onClick() {\n      return onCancel && onCancel();\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), React.createElement(Button, {\n    type: ButtonType.white,\n    onClick: function onClick() {\n      return onBurimeSave();\n    }\n  }, isNew ? 'Создать' : 'Сохранить')));\n};","map":null,"metadata":{},"sourceType":"module"}