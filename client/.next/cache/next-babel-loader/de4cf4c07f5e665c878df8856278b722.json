{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { getCommonMessage, changeActiveUsers } from './../../constants/socketEvents';\nimport { useState, useEffect } from 'react';\nimport { getApi } from './api';\nvar api = getApi();\nexport var getCommonMessages = function getCommonMessages() {\n  return api.get('/api/common-chat-messages').then(function (response) {\n    return response.data;\n  });\n};\nexport var useMessages = function useMessages(email, socket) {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState([]),\n      messages = _useState3[0],\n      setMessages = _useState3[1];\n\n  var _useState4 = useState(0),\n      activeUsers = _useState4[0],\n      setActiveUsers = _useState4[1];\n\n  useEffect(function () {\n    getCommonMessages().then(function (data) {\n      var messages = data.messages.map(function (message) {\n        message.isMine = message.author.email === email;\n        return message;\n      });\n      setActiveUsers(data.activeUsers);\n      setMessages(messages);\n    })[\"catch\"](function (err) {\n      return setError(err);\n    })[\"finally\"](function () {\n      return setLoading(false);\n    });\n\n    var onChangeActiveUsers = function onChangeActiveUsers(activeUsers) {\n      return setActiveUsers(activeUsers);\n    };\n\n    socket.on(changeActiveUsers, onChangeActiveUsers);\n    return function () {\n      socket.off(changeActiveUsers, onChangeActiveUsers);\n    };\n  }, []);\n  useEffect(function () {\n    var onGetMessage = function onGetMessage(message) {\n      message.isMine = message.author.email === email;\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n    };\n\n    socket.on(getCommonMessage, onGetMessage);\n    return function () {\n      socket.off(getCommonMessage, onGetMessage);\n    };\n  }, [messages]);\n  return {\n    loading: loading,\n    messages: messages,\n    error: error,\n    activeUsers: activeUsers\n  };\n};","map":{"version":3,"sources":["C:/Users/alexs/Desktop/Алексей/code/burime/client/services/api/messages.ts"],"names":["getCommonMessage","changeActiveUsers","useState","useEffect","getApi","api","getCommonMessages","get","then","response","data","useMessages","email","socket","loading","setLoading","error","setError","messages","setMessages","activeUsers","setActiveUsers","map","message","isMine","author","err","onChangeActiveUsers","on","off","onGetMessage"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,iBAA3B,QAAoD,gCAApD;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,OAAvB;AAEA,IAAMC,GAAG,GAAGD,MAAM,EAAlB;AAEA,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAC7BD,GAAG,CAACE,GAAJ,CAAQ,2BAAR,EAAqCC,IAArC,CAA0C,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAAlD,CAD6B;AAAA,CAA1B;AAGP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgBC,MAAhB,EAA2B;AAAA,kBACpBX,QAAQ,CAAC,IAAD,CADY;AAAA,MAC3CY,OAD2C;AAAA,MAClCC,UADkC;;AAAA,mBAExBb,QAAQ,CAAC,IAAD,CAFgB;AAAA,MAE3Cc,KAF2C;AAAA,MAEpCC,QAFoC;;AAAA,mBAGlBf,QAAQ,CAAqB,EAArB,CAHU;AAAA,MAG3CgB,QAH2C;AAAA,MAGjCC,WAHiC;;AAAA,mBAIZjB,QAAQ,CAAS,CAAT,CAJI;AAAA,MAI3CkB,WAJ2C;AAAA,MAI9BC,cAJ8B;;AAMlDlB,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,iBAAiB,GACZE,IADL,CACU,UAAAE,IAAI,EAAI;AACV,UAAMQ,QAA4B,GAAGR,IAAI,CAACQ,QAAL,CAAcI,GAAd,CACjC,UAAAC,OAAO,EAAI;AACPA,QAAAA,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACE,MAAR,CAAeb,KAAf,KAAyBA,KAA1C;AACA,eAAOW,OAAP;AACH,OAJgC,CAArC;AAMAF,MAAAA,cAAc,CAACX,IAAI,CAACU,WAAN,CAAd;AACAD,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAVL,WAWW,UAAAQ,GAAG;AAAA,aAAIT,QAAQ,CAACS,GAAD,CAAZ;AAAA,KAXd,aAYa;AAAA,aAAMX,UAAU,CAAC,KAAD,CAAhB;AAAA,KAZb;;AAcA,QAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACP,WAAD;AAAA,aAAiBC,cAAc,CAACD,WAAD,CAA/B;AAAA,KAA5B;;AACAP,IAAAA,MAAM,CAACe,EAAP,CAAU3B,iBAAV,EAA6B0B,mBAA7B;AACA,WAAO,YAAM;AACTd,MAAAA,MAAM,CAACgB,GAAP,CAAW5B,iBAAX,EAA8B0B,mBAA9B;AACH,KAFD;AAGH,GApBQ,EAoBN,EApBM,CAAT;AAsBAxB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAM2B,YAAY,GAAG,SAAfA,YAAe,CAACP,OAAD,EAAa;AAC9BA,MAAAA,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACE,MAAR,CAAeb,KAAf,KAAyBA,KAA1C;AACAO,MAAAA,WAAW,8BAAKD,QAAL,IAAeK,OAAf,GAAX;AACH,KAHD;;AAIAV,IAAAA,MAAM,CAACe,EAAP,CAAU5B,gBAAV,EAA4B8B,YAA5B;AACA,WAAO,YAAM;AACTjB,MAAAA,MAAM,CAACgB,GAAP,CAAW7B,gBAAX,EAA6B8B,YAA7B;AACH,KAFD;AAGH,GATQ,EASN,CAACZ,QAAD,CATM,CAAT;AAWA,SAAO;AAAEJ,IAAAA,OAAO,EAAPA,OAAF;AAAWI,IAAAA,QAAQ,EAARA,QAAX;AAAqBF,IAAAA,KAAK,EAALA,KAArB;AAA4BI,IAAAA,WAAW,EAAXA;AAA5B,GAAP;AACH,CAxCM","sourcesContent":["import { getCommonMessage, changeActiveUsers } from './../../constants/socketEvents'\nimport { ChatMessageModel } from '../../models/interfaces'\nimport { useState, useEffect } from 'react'\nimport { getApi } from './api'\n\nconst api = getApi()\n\nexport const getCommonMessages = () =>\n    api.get('/api/common-chat-messages').then(response => response.data)\n\nexport const useMessages = (email: string, socket) => {\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(null)\n    const [messages, setMessages] = useState<ChatMessageModel[]>([])\n    const [activeUsers, setActiveUsers] = useState<number>(0)\n\n    useEffect(() => {\n        getCommonMessages()\n            .then(data => {\n                const messages: ChatMessageModel[] = data.messages.map(\n                    message => {\n                        message.isMine = message.author.email === email\n                        return message\n                    }\n                )\n                setActiveUsers(data.activeUsers)\n                setMessages(messages)\n            })\n            .catch(err => setError(err))\n            .finally(() => setLoading(false));\n\n        const onChangeActiveUsers = (activeUsers) => setActiveUsers(activeUsers);\n        socket.on(changeActiveUsers, onChangeActiveUsers);\n        return () => {\n            socket.off(changeActiveUsers, onChangeActiveUsers);\n        };\n    }, [])\n\n    useEffect(() => {\n        const onGetMessage = (message) => {\n            message.isMine = message.author.email === email;\n            setMessages([...messages, message]);\n        }\n        socket.on(getCommonMessage, onGetMessage);\n        return () => {\n            socket.off(getCommonMessage, onGetMessage);\n        };\n    }, [messages]);\n\n    return { loading, messages, error, activeUsers }\n};\n"]},"metadata":{},"sourceType":"module"}