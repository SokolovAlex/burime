{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport Socket from 'socket.io-client';\nimport React, { createContext, useContext, Component } from 'react';\nimport { baseServerUrl } from '../config';\nexport var SocketContext = createContext(null);\nexport var useSocket = function useSocket() {\n  return useContext(SocketContext);\n};\nexport var SocketProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SocketProvider, _Component);\n\n  function SocketProvider(props) {\n    var _this;\n\n    _classCallCheck(this, SocketProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SocketProvider).call(this, props));\n    _this.state = {\n      socket: null\n    };\n\n    if (!props.user) {\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.state = {\n      socket: Socket(baseServerUrl, props.opts || {\n        query: \"user=\".concat(props.user.email)\n      })\n    };\n    return _this;\n  }\n\n  _createClass(SocketProvider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SocketContext.Provider, {\n        value: this.state.socket\n      }, this.props.children);\n    }\n  }]);\n\n  return SocketProvider;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}