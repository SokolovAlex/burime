{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useUser } from '../../../services/contexts/auth';\nimport { Title } from '../../atoms/Title/Title';\nimport { useActiveBurime, goToBurime, useBurimesPage } from '../../../services/api/burime';\nimport dayjs from 'dayjs';\nimport { HeartEmpty, OpenStyled, HeartFilled, ActionsBlock, Action } from '../../atoms/styled';\nimport { like, dislike } from '../../../services/api/likes';\nimport DataTable from 'react-data-table-component';\nimport { Spinner } from '../../atoms/Spinner/Spinner';\nimport { breakpoints } from '../../../constants';\nvar RowsPerPage = 20;\n\nvar prepareRows = function prepareRows(burimes, userEmail) {\n  return burimes.map(function (_ref) {\n    var id = _ref.id,\n        likes = _ref.likes,\n        theme = _ref.theme,\n        user1 = _ref.user1,\n        user2 = _ref.user2,\n        createdAt = _ref.createdAt;\n    return {\n      id: id.toString(),\n      burimeId: id,\n      theme: theme,\n      user1: user1.name,\n      opponent: user2.name,\n      iLike: likes.some(function (like) {\n        return like.user.email === userEmail;\n      }),\n      likes: likes.length,\n      createdAt: dayjs(createdAt).format('DD/MM/YYYY')\n    };\n  });\n};\n\nvar mobileBreakpoint = _parseInt(breakpoints.breakpointSizes.mobile, 10);\n\nvar prepareColumns = function prepareColumns(_ref2) {\n  var onOpen = _ref2.onOpen,\n      onLike = _ref2.onLike,\n      onDislike = _ref2.onDislike;\n  return [{\n    name: 'Заголовок',\n    selector: 'theme',\n    sortable: true\n  }, {\n    name: 'Вызвал',\n    selector: 'user1',\n    sortable: true,\n    right: true,\n    hide: mobileBreakpoint\n  }, {\n    name: 'Принял',\n    selector: 'opponent',\n    sortable: true,\n    right: true,\n    hide: mobileBreakpoint\n  }, {\n    name: 'Дата',\n    selector: 'createdAt',\n    sortable: true,\n    right: true\n  }, {\n    name: 'Нравится',\n    cell: function cell(row) {\n      return React.createElement(ActionsBlock, null, row.iLike ? React.createElement(HeartFilled, {\n        onClick: function onClick() {\n          return onDislike(row.burimeId);\n        },\n        width: 16\n      }) : React.createElement(HeartEmpty, {\n        onClick: function onClick() {\n          return onLike(row.burimeId);\n        },\n        width: 16\n      }), React.createElement(Action, null, row.likes));\n    },\n    button: true,\n    right: true\n  }, {\n    name: 'Прочесть',\n    cell: function cell(row) {\n      return React.createElement(OpenStyled, {\n        width: 16,\n        onClick: function onClick() {\n          return onOpen(row.burimeId);\n        }\n      });\n    },\n    button: true,\n    right: true\n  }];\n};\n\nvar setLike = function setLike(isLike, burimes, burimeId, userEmail) {\n  var burime = burimes.find(function (burime) {\n    return burime.id === burimeId;\n  });\n\n  if (isLike) {\n    burime.likes.push({\n      user: {\n        email: userEmail\n      }\n    });\n  } else {\n    burime.likes = burime.likes.filter(function (burime) {\n      return burime.user.email !== userEmail;\n    });\n  }\n\n  return _toConsumableArray(burimes);\n};\n\nexport var AllBurimeList = function AllBurimeList() {\n  var user = useUser();\n\n  if (!user) {\n    return null;\n  }\n\n  useActiveBurime();\n\n  var _useBurimesPage = useBurimesPage({\n    page: 1,\n    size: RowsPerPage\n  }),\n      loading = _useBurimesPage.loading,\n      burimes = _useBurimesPage.burimes,\n      setBurimes = _useBurimesPage.setBurimes,\n      total = _useBurimesPage.total,\n      setPage = _useBurimesPage.setPage;\n\n  var _useState = useState();\n\n  _objectDestructuringEmpty(_useState);\n\n  var onOpen = useCallback(function (burimeId) {\n    return goToBurime(burimeId);\n  }, []);\n  var onLike = useCallback(function (burimeId) {\n    return like(burimeId).then(function () {\n      return setBurimes(setLike(true, burimes, burimeId, user.email));\n    });\n  }, [burimes]);\n  var onDislike = useCallback(function (burimeId) {\n    return dislike(burimeId).then(function () {\n      return setBurimes(setLike(false, burimes, burimeId, user.email));\n    });\n  }, [burimes]);\n  var rows = useMemo(function () {\n    return prepareRows(burimes, user.email);\n  }, [burimes]);\n  var columns = useMemo(function () {\n    return prepareColumns({\n      onOpen: onOpen,\n      onLike: onLike,\n      onDislike: onDislike\n    });\n  }, [onOpen, onLike, onDislike]);\n  return React.createElement(React.Fragment, null, React.createElement(Title, null, \"\\u0412\\u0441\\u0435 \\u0431\\u0443\\u0440\\u0438\\u043C\\u0435\"), React.createElement(DataTable, {\n    noHeader: true,\n    columns: columns,\n    data: rows,\n    progressPending: loading,\n    progressComponent: React.createElement(Spinner, null),\n    pagination: true,\n    paginationServer: true,\n    paginationTotalRows: total,\n    paginationRowsPerPageOptions: [RowsPerPage],\n    paginationPerPage: RowsPerPage,\n    onChangePage: function onChangePage(page) {\n      return setPage(page);\n    }\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}