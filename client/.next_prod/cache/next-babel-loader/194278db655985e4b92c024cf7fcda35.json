{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { LoginContainer } from './styled';\nimport { FormDialog } from '../Dialog/Dialog';\nimport { registration, signIn } from '../../services/api/auth';\nimport { SignIn } from './SignIn';\nimport { SignUp } from './SignUp';\nimport { success, error } from '../../services/toast';\nexport var AuthModal = function AuthModal(_ref) {\n  var isOpen = _ref.isOpen,\n      setOpen = _ref.setOpen;\n\n  var _useState = useState(true),\n      signInMode = _useState[0],\n      setSignIn = _useState[1];\n\n  var _useState2 = useState(),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var onLogin = useCallback(function _callee(_ref2) {\n    var email, password, _ref3, status, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref2.email, password = _ref2.password;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signIn({\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            _ref3 = _context.sent;\n            status = _ref3.status;\n            data = _ref3.data;\n\n            if (!(status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            error('Ошибка', data.message);\n            return _context.abrupt(\"return\");\n\n          case 9:\n            document.location.reload(true);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }, []);\n  var onRegistration = useCallback(function _callee2(_ref4) {\n    var name, email, password, _ref5, data, status;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            name = _ref4.name, email = _ref4.email, password = _ref4.password;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(registration({\n              name: name,\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            _ref5 = _context2.sent;\n            data = _ref5.data;\n            status = _ref5.status;\n\n            if (!(status !== 200)) {\n              _context2.next = 9;\n              break;\n            }\n\n            error('Ошибка', data.message);\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            success('Успешно', 'Вы зарегистрированы!');\n            setEmail(email);\n            setPassword(password);\n            setSignIn(true);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }, []);\n  var toggleMode = useCallback(function () {\n    setSignIn(!signInMode);\n  }, [signInMode]);\n  return React.createElement(FormDialog, {\n    isOpen: isOpen,\n    setOpen: setOpen\n  }, React.createElement(React.Fragment, null, React.createElement(LoginContainer, null, signInMode ? React.createElement(SignIn, {\n    email: email,\n    password: password,\n    onSubmit: onLogin,\n    onToggle: toggleMode\n  }) : React.createElement(SignUp, {\n    onSubmit: onRegistration,\n    onToggle: toggleMode\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}